<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>rust on David Tyler's Blog</title><link>https://blog.davetcode.co.uk/tags/rust/</link><description>Recent content in rust on David Tyler's Blog</description><generator>Hugo -- gohugo.io</generator><language>en-GB</language><lastBuildDate>Thu, 10 Dec 2020 10:09:51 +0000</lastBuildDate><atom:link href="https://blog.davetcode.co.uk/tags/rust/index.xml" rel="self" type="application/rss+xml"/><item><title>Nes Emulator in Rust</title><link>https://blog.davetcode.co.uk/post/nes-emulator-rust/</link><pubDate>Thu, 10 Dec 2020 10:09:51 +0000</pubDate><guid>https://blog.davetcode.co.uk/post/nes-emulator-rust/</guid><description>Over a period of 2 months in 2020 I intermittently worked on a NES emulator in rust to build a proper opinion of the language (and because it&amp;rsquo;s fun). On the whole it was quite successful, https://github.com/DaveTCode/nes-emulator-rust now exists, has coverage of maybe 80% of the total ROM dumps out there, and passes almost all of the test rom suite.
All achieved with no unsafe, no Rc/Refcell, minimal heap allocations (we don&amp;rsquo;t know how big a Rom is at compile time, it might be 8KB or 256KB) and a small handful of external crates.
This blog post is a write up of my feelings around rust as a language but probably provides some insights into writing an emulator along the way.</description></item></channel></rss>