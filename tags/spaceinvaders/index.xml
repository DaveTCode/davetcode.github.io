<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>spaceinvaders on David Tyler's Blog</title><link>https://blog.davetcode.co.uk/tags/spaceinvaders/</link><description>Recent content in spaceinvaders on David Tyler's Blog</description><generator>Hugo -- gohugo.io</generator><language>en-GB</language><lastBuildDate>Sat, 01 May 2021 13:33:09 +0000</lastBuildDate><atom:link href="https://blog.davetcode.co.uk/tags/spaceinvaders/index.xml" rel="self" type="application/rss+xml"/><item><title>Bringing emulation into the 21st century</title><link>https://blog.davetcode.co.uk/post/21st-century-emulator/</link><pubDate>Sat, 01 May 2021 13:33:09 +0000</pubDate><guid>https://blog.davetcode.co.uk/post/21st-century-emulator/</guid><description>I&amp;rsquo;m a huge fan of emulation but have become increasingly disillusioned with the lack of ambition shown by those in the emulation community. Whilst the rest of world moves onto massively distributed architectures, emulation is still stuck firmly in the 20th century writing single threaded C++ of all things.
As a modern forward thinking engineer I took it upon myself to start the trend of bringing emulation into the 21st century where we can leverage features like these:
Hot swappable microcode Ability to write different parts in different languages as appropriate Secure by default (mTLS on all function calls) Scalability Fault tolerance This culminated in the implementation of an 8080 microprocessor utilising a truly modern containerised microservices based architecture running on kubernetes with swappable frontends for a CP/M test harness and a full implementation of the original Space Invaders arcade machine.</description></item></channel></rss>